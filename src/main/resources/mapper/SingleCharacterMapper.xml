<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chenhongliang.namegenerator.mapper.SingleCharacterMapper">

    <select id="isExist" parameterType="String" resultType="Boolean">
        select count(*)
        from single_character
        where del_flag = false
            and `character` = #{character}
    </select>

    <select id="isEverExist" parameterType="String" resultType="Boolean">
        select count(*)
        from single_character
        where `character` = #{character}
    </select>

    <insert id="insert" parameterType="SingleCharacterModel" useGeneratedKeys="true" keyProperty="id">
        insert into single_character
        <trim prefix="(" suffix=")" suffixOverrides=",">
            `character`,
            pinyin,
            atonal_pinyin,
            <if test="meaning != null and meaning != ''">meaning,</if>
            <if test="wuxing != null and wuxing != ''">wuxing,</if>
            <if test="idiom != null and idiom != ''">idiom,</if>
            <if test="poetry != null and poetry != ''">poetry,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{character},
            #{pinyin},
            #{atonalPinyin},
            <if test="meaning != null and meaning != ''">#{meaning},</if>
            <if test="wuxing != null and wuxing != ''">#{wuxing},</if>
            <if test="idiom != null and idiom != ''">#{idiom},</if>
            <if test="poetry != null and poetry != ''">#{poetry},</if>
        </trim>
    </insert>

    <update id="updateDelFlag">
        update single_character
        set del_flag = #{delFlag}
        where `character` = #{character}
    </update>

    <update id="updateSex">
        update single_character
        set
        <if test="sex == 'male'">male = true</if>
        <if test="sex == 'female'">female = true</if>
        where `character` in
        <foreach item="item" collection="characters" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </update>

    <update id="updatePinyin">
        update single_character
        set
            pinyin = #{pinyin},
            atonal_pinyin = #{atonalPinyin}
        where `character` = #{character}
    </update>

    <select id="constrainedCharacters" parameterType="NameConstrainForm" resultType="String">
        select `character`
        from single_character
        <where>
            del_flag = false
            <if test='sex == "男"'>and male = true</if>
            <if test='sex == "女"'>and female = true</if>
            <if test="bannedPinyin != null and bannedPinyin.size > 0">
                and atonal_pinyin not in
                <foreach item="item" collection="bannedPinyin" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="bannedCharacter != null and bannedCharacter.size > 0">
                and `character` not in
                <foreach item="item" collection="bannedCharacter" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="wuxing != null and wuxing.size > 0">
                and wuxing in
                <foreach item="item" collection="wuxing" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

</mapper>